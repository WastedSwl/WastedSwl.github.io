{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\WastedSwl.github.io\\\\register\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport LoginForm from \"./components/LoginForm\";\nimport { Context } from \"./index\";\nimport { observer } from \"mobx-react-lite\";\nimport UserService from \"./services/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    store\n  } = useContext(Context);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      store.checkAuth();\n    }\n  }, []);\n  async function getUsers() {\n    try {\n      const response = await UserService.fetchUsers();\n      setUsers(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  if (store.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  if (!store.isAuth) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getUsers,\n        children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: store.isAuth ? `Пользователь авторизован ${store.user.email}` : 'АВТОРИЗУЙТЕСЬ'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: store.user.isActivated ? 'Аккаунт подтвержден по почте' : 'ПОДТВЕРДИТЕ АККАУНТ!!!!'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => store.logout(),\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getUsers,\n        children: \"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user.email\n    }, user.email, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"tfiaStP1n11BNY4mNXglrA1kUrU=\");\n_c = App;\nexport default _c2 = observer(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useContext","useEffect","useState","LoginForm","Context","observer","UserService","jsxDEV","_jsxDEV","App","_s","store","users","setUsers","localStorage","getItem","checkAuth","getUsers","response","fetchUsers","data","e","console","log","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","isAuth","onClick","user","email","isActivated","logout","map","_c","_c2","$RefreshReg$"],"sources":["D:/Project/WastedSwl.github.io/register/src/App.tsx"],"sourcesContent":["import React, {FC, useContext, useEffect, useState} from 'react';\nimport LoginForm from \"./components/LoginForm\";\nimport {Context} from \"./index\";\nimport {observer} from \"mobx-react-lite\";\nimport {IUser} from \"./models/IUser\";\nimport UserService from \"./services/UserService\";\n\nconst App: FC = () => {\n    const {store} = useContext(Context);\n    const [users, setUsers] = useState<IUser[]>([]);\n\n    useEffect(() => {\n        if (localStorage.getItem('token')) {\n            store.checkAuth()\n        }\n    }, [])\n\n    async function getUsers() {\n        try {\n            const response = await UserService.fetchUsers();\n            setUsers(response.data);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    if (store.isLoading) {\n        return <div>Загрузка...</div>\n    }\n\n    if (!store.isAuth) {\n        return (\n            <div>\n                <LoginForm/>\n                <button onClick={getUsers}>Получить пользователей</button>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <h1>{store.isAuth ? `Пользователь авторизован ${store.user.email}` : 'АВТОРИЗУЙТЕСЬ'}</h1>\n            <h1>{store.user.isActivated ? 'Аккаунт подтвержден по почте' : 'ПОДТВЕРДИТЕ АККАУНТ!!!!'}</h1>\n            <button onClick={() => store.logout()}>Выйти</button>\n            <div>\n                <button onClick={getUsers}>Получить пользователей</button>\n            </div>\n            {users.map(user =>\n                <div key={user.email}>{user.email}</div>\n            )}\n        </div>\n    );\n};\n\nexport default observer(App);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}