{"ast":null,"code":"import { makeAutoObservable } from \"mobx\";\nimport AuthService from \"../services/AuthService\";\nimport axios from 'axios';\nimport { API_URL } from \"../http\";\nexport default class Store {\n  constructor() {\n    this.user = {};\n    this.isAuth = false;\n    this.isLoading = false;\n    makeAutoObservable(this);\n  }\n  setAuth(bool) {\n    this.isAuth = bool;\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  setLoading(bool) {\n    this.isLoading = bool;\n  }\n  async login(email, password) {\n    try {\n      const response = await AuthService.login(email, password);\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      if (e instanceof Error) {\n        console.log(e.message);\n      } else {\n        console.log(e);\n      }\n    }\n  }\n  async registration(email, password) {\n    try {\n      const response = await AuthService.registration(email, password);\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      if (e instanceof Error) {\n        console.log(e.message);\n      } else {\n        console.log(e);\n      }\n    }\n  }\n  async logout() {\n    try {\n      const response = await AuthService.logout();\n      localStorage.removeItem('token');\n      this.setAuth(false);\n      this.setUser({});\n    } catch (e) {\n      if (e instanceof Error) {\n        console.log(e.message);\n      } else {\n        console.log(e);\n      }\n    }\n  }\n  async checkAuth() {\n    this.setLoading(true);\n    try {\n      const response = await axios.get(`${API_URL}/refresh`, {\n        withCredentials: true\n      });\n      console.log(response);\n      localStorage.setItem('token', response.data.accessToken);\n      this.setAuth(true);\n      this.setUser(response.data.user);\n    } catch (e) {\n      if (e instanceof Error) {\n        console.log(e.message);\n      } else {\n        console.log(e);\n      }\n    } finally {\n      this.setLoading(false);\n    }\n  }\n}","map":{"version":3,"names":["makeAutoObservable","AuthService","axios","API_URL","Store","constructor","user","isAuth","isLoading","setAuth","bool","setUser","setLoading","login","email","password","response","console","log","localStorage","setItem","data","accessToken","e","Error","message","registration","logout","removeItem","checkAuth","get","withCredentials"],"sources":["D:/Project/WastedSwl.github.io/register/src/store/store.ts"],"sourcesContent":["import {IUser} from \"../models/IUser\";\nimport {makeAutoObservable} from \"mobx\";\nimport AuthService from \"../services/AuthService\";\nimport axios from 'axios';\nimport {AuthResponse} from \"../models/response/AuthResponse\";\nimport {API_URL} from \"../http\";\n\nexport default class Store {\n    user = {} as IUser;\n    isAuth = false;\n    isLoading = false;\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    setAuth(bool: boolean) {\n        this.isAuth = bool;\n    }\n\n    setUser(user: IUser) {\n        this.user = user;\n    }\n\n    setLoading(bool: boolean) {\n        this.isLoading = bool;\n    }\n\n    async login(email: string, password: string) {\n        try {\n            const response = await AuthService.login(email, password);\n            console.log(response)\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            if (e instanceof Error) {\n                console.log(e.message);\n            } else {\n                console.log(e);\n            }\n        }\n    }\n    \n    async registration(email: string, password: string) {\n        try {\n            const response = await AuthService.registration(email, password);\n            console.log(response)\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            if (e instanceof Error) {\n                console.log(e.message);\n            } else {\n                console.log(e);\n            }\n        }\n    }\n    \n    async logout() {\n        try {\n            const response = await AuthService.logout();\n            localStorage.removeItem('token');\n            this.setAuth(false);\n            this.setUser({} as IUser);\n        } catch (e) {\n            if (e instanceof Error) {\n                console.log(e.message);\n            } else {\n                console.log(e);\n            }\n        }\n    }\n    \n    async checkAuth() {\n        this.setLoading(true);\n        try {\n            const response = await axios.get<AuthResponse>(`${API_URL}/refresh`, {withCredentials: true})\n            console.log(response);\n            localStorage.setItem('token', response.data.accessToken);\n            this.setAuth(true);\n            this.setUser(response.data.user);\n        } catch (e) {\n            if (e instanceof Error) {\n                console.log(e.message);\n            } else {\n                console.log(e);\n            }\n        } finally {\n            this.setLoading(false);\n        }\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}